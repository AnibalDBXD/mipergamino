{"ast":null,"code":"var _jsxFileName = \"/usr/app/pages/alquileres.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n// posts will be populated at build time by getStaticProps()\nfunction Alquileres({\n  posts\n}) {\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }\n  }, posts.map(post => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }\n  }, post.title)));\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\n_c = Alquileres;\nexport var __N_SSG = true;\nexport default Alquileres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alquileres\");","map":{"version":3,"sources":["/usr/app/pages/alquileres.js"],"names":["Alquileres","posts","map","post","title"],"mappings":";;;;AAAA;AACA,SAASA,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA+B;AAC3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAWC,IAAD,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,CADD,CADH,CADF;AAOD,C,CAED;AACA;AACA;;;KAZOJ,U;;AA8BP,eAAeA,UAAf","sourcesContent":["// posts will be populated at build time by getStaticProps()\nfunction Alquileres({ posts }) {\n    return (\n      <ul>\n        {posts.map((post) => (\n          <li>{post.title}</li>\n        ))}\n      </ul>\n    )\n  }\n  \n  // This function gets called at build time on server-side.\n  // It won't be called on client-side, so you can even do\n  // direct database queries. See the \"Technical details\" section.\n  export async function getStaticProps() {\n    // Call an external API endpoint to get posts.\n    // You can use any data fetching library\n    const res = await fetch('http://server:8080/posts')\n    const posts = await res.data.json()\n\n    console.log(posts)\n  \n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n      props: {\n        posts,\n      },\n    }\n  }\n  \n  export default Alquileres"]},"metadata":{},"sourceType":"module"}